version: '3.7'

services:

  test-nextjs:
    container_name: test-nextjs
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - './app:/opt/app'
      - '/opt/app/node_modules'
    ports:
      - 3003:3000
    environment:
      - DB_HOST= 
      - DB_CREDENTIALS=
      - BACKEND_IP=
      - BACKEND_PORT=
      - API_KEY=AIzaSyCzA9fW-aOeTUOPnWrUuUmNEi5UDHz8JKE
    stdin_open: true
    tty: true
    #command: ["npm", "run", "s", "--silent"]
    command: ["npm", "run", "dev"] 
#    depends_on: 
#      - node-database
#
  test-backend:
    container_name: test-backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      - './backend:/opt/backend'
      - '/opt/backend/node_modules'
#
#        #working_dir:  /opt/server
    expose:
      - 9900
    ports:
      - 9900:9900
    environment:
      - PORT=9900
      - HOST_IP=0.0.0.0
    command: ['nodemon', 'server.js']

  test-database:
    container_name: test-database
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - './test-db:/data/db'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
#
#  nginx:    
#    image: nginx:alpine
#    container_name: nginx
#    volumes:
#      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
#    ports:
#      - 8080:80
#    depends_on:
#      - test-node
#      - node-server
#
